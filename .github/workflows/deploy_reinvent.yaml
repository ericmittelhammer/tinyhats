name: Build and Deploy to K8s

on:
  push:
    branches:
      - 'reinvent'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: "Frontend Service"
            context: services/frontend-service
            repository: frontend-service
          - name: "Gateway Service"
            context: .
            repository: gateway-service
          - name: "Admin Service"
            context: services/admin-service
            repository: admin-service
          - name: "Add Service"
            context: services/add-service
            repository: add-service
          - name: "Fetch Service"
            context: services/fetch-service
            repository: fetch-service
          - name: "Manipulation Service"
            context: services/manipulation-service
            repository: manipulation-service
          - name: "Moderate Service"
            context: services/moderate-service
            repository: moderate-service
          - name: "Upload Service"
            context: services/upload-service
            repository: upload-service
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.K8S_ID }}
          aws-secret-access-key: ${{ secrets.K8S_SECRET }}
          aws-region: us-east-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: ${{ matrix.name }}
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.context }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/tinyhats_reinvent/${{ matrix.repository }}
          cache-from: type=local,src=/tmp/.buildx-cache/${{ matrix.repository }}
          cache-to: type=local,dest=/tmp/.buildx-cache-new/${{ matrix.repository }},mode=max
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache/${{ matrix.repository }}
          mv /tmp/.buildx-cache-new/${{ matrix.repository }} /tmp/.buildx-cache/${{ matrix.repository }}



  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Make Deploy Directory
        run: |
          mkdir deploy

      - name: Replace Environment Variables (GATEWAY)
        uses: danielr1996/envsubst-action@1.0.0
        env:
          FETCH_ENDPOINT: ${{ secrets.UPLOAD_ENDPOINT }}
          ADD_ENDPOINT: ${{ secrets.ADD_ENDPOINT }}
          MODERATE_ENDPOINT: ${{ secrets.MODERATE_ENDPOINT }}
        with:
          input: kube/gateway.yaml
          output: deploy/gateway.yaml

      - name: Replace Environment Variables (ADD)
        uses: danielr1996/envsubst-action@1.0.0
        env:
          UPLOAD_ENDPOINT: ${{ secrets.UPLOAD_ENDPOINT }}
        with:
          input: kube/add.yaml
          output: deploy/add.yaml
          
      - name: Replace Environment Variables (MYSQL)
        uses: danielr1996/envsubst-action@1.0.0
        env:
          PASSWORD: ${{ secrets.PASSWORD }}
        with:
          input: kube/mysql-deployment.yaml
          output: deploy/mysql-deployment.yaml

      - name: Replace Environment Variables (FETCH)
        uses: danielr1996/envsubst-action@1.0.0
        env:
          HOST: ${{ secrets.HOST }}
          PASSWORD: ${{ secrets.PASSWORD }}
          MANIPULATE_ENDPOINT: ${{ secrets.MANIPULATE_ENDPOINT }}
        with:
          input: kube/fetch.yaml
          output: deploy/fetch.yaml

      - name: Replace Environment Variables (MODERATE)
        uses: danielr1996/envsubst-action@1.0.0
        env:
          HOST: ${{ secrets.HOST }}
          PASSWORD: ${{ secrets.PASSWORD }}
        with:
          input: kube/moderate.yaml
          output: deploy/moderate.yaml

      - name: Replace Environment Variables (UPLOAD)
        uses: danielr1996/envsubst-action@1.0.0
        env:
          HOST: ${{ secrets.HOST }}
          PASSWORD: ${{ secrets.PASSWORD }}
          S3_ID: ${{ secrets.S3_ID }}
          S3_SECRET: ${{ secrets.S3_SECRET }}
        with:
          input: kube/upload.yaml
          output: deploy/upload.yaml

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.K8S_ID }}
          aws-secret-access-key: ${{ secrets.K8S_SECRET }}
          aws-region: us-east-2
          
      - name: Apply Configuration Changes
        uses: bitprj/kubernetes-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -f deploy

      - name: Trigger deploy
        uses: bitprj/kubernetes-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: -n default rollout restart deploy